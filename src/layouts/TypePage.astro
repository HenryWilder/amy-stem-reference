---
import Ref from '../components/Ref.astro';
import ScopeBlock from '../components/ScopeBlock.astro';
import Comment from '../components/syntax/Comment.astro';
import Keyword from '../components/syntax/Keyword.astro';
import Todo from '../components/Todo.astro';
import { type GlossaryItem, type ItemPath, generateAutoAliases, getGlossaryItem } from '../scripts/glossary';
import ModulePage from './ModulePage.astro';

interface Props {
    path: ItemPath;
}

const { path } = Astro.props;

/** Data about the item we are referencing */
const item: GlossaryItem = getGlossaryItem(path);
---

<ModulePage title={`${path.at(-1)} type`} module={path[0]}>
    <h1><Keyword tkn="type"/> <Ref path={path} mustBe="type"/></h1>

    <ScopeBlock>
        <h2 id="aliases"><Comment>Aliases</Comment></h2>
        <table class="alias-table">
            {item.aliases.map((alias) => {
                const { noun, verb, adjective } = generateAutoAliases(alias);
                return <tr>
                    <td><span class="part-of-speech noun">noun</span><br/>{noun
                        ?
                            <>{noun.singular.match(/^[aeiou]/) ? 'an ' : 'a '} {noun.singular}<br/>
                            <div class="more-words">
                                many {noun.plural}
                            </div></>
                        :
                            <>&nbsp;-</>
                    }</td>
                    <td><span class="part-of-speech verb">verb</span><br/>{verb
                        ?
                            <>to {verb.infinitive}<br/>
                            <div class="more-words">
                                it {verb.past}<br/>
                                it {verb.present}<br/>
                                is {verb.continuous}<br/>
                                will {verb.future}
                            </div></>
                        :
                            <>&nbsp;-</>
                    }</td>
                    <td><span class="part-of-speech adjective">adjective</span><br/>{adjective
                        ?
                            <>is {adjective.base}<br/>
                            <div class="more-words">
                                {adjective.comparative} than<br/>
                                the {adjective.superlative}<br/>
                                has {adjective.noun}
                            </div></>
                        :
                            <>&nbsp;-</>
                    }</td>
                </tr>
            })}
        </table>

        <h2 id="notation"><Comment>Notation</Comment></h2>
        <slot name="notation"><Todo/></slot>

        <h2 id="description"><Comment>Description</Comment></h2>
        <slot name="description"><Todo/></slot>

        <h2 id="fields"><Comment>Fields</Comment></h2>
        <slot name="fields"><Todo/></slot>

        <h2 id="methods"><Comment>Methods</Comment></h2>
        <slot name="methods"><Todo/></slot>
    </ScopeBlock>
</ModulePage>
