---
import katex from 'katex';
import '../styles/animated-tex.css';
import { getCollection } from 'astro:content';
import type { GlossaryEntry } from '../scripts/glossary';
import { preprocs } from '../scripts/tex-preproc';

interface Props {
    tex: string;
}

const { tex } = Astro.props;

const animBox     = 'anim-box'     as const;
const animElement = 'anim-element' as const;
const tooltip     = 'tooltip'      as const;
const tooltipText = 'tooltiptext'  as const;

const macros = {
    // #1 is content
    "\\animBox": `\\htmlClass{${animBox}}{#1}`,

    // #1 is content
    "\\animElement": `\\htmlClass{${animElement}}{#1}`,

    // #1 is content
    // #2 is tooltip
    "\\tooltip": `\\htmlClass{${tooltip}}{{#1}\\htmlClass{${tooltipText}}{#2}}`,

    // #1 is kind
    // #2 is content
    "\\kind": `\\htmlClass{#1}{#2}`,

    // #1 is href
    // #2 is kind
    // #3 is content
    // #4 is tooltip
    "\\fullref": `\\tooltip{\\kind{#2}{\\href{#1}{#3}}}{#4}`,

    // binary horizontal 'or'
    "\\bhor": `\\;\\text{or}\\;`,

    // quad horizontal 'or'
    "\\qhor": `\\quad\\text{or}\\quad`,

    // 1em vertical 'or'
    "\\bvor": `\\[1em]\\text{or}\\[1em]`,

    // 2em vertical 'or'
    "\\qvor": `\\[2em]\\text{or}\\[2em]`,
} as const;



let modifiedTex = tex;
for (const preproc of preprocs) {
    modifiedTex = await preproc(modifiedTex);
}
console.log(`the tex '${tex}' became '${modifiedTex}'`); // debug
---

<Fragment set:html={katex.renderToString(modifiedTex, { trust: true, macros: macros, strict: 'ignore' })} />

<script src="../../public/client-animated-tex.ts"></script>
