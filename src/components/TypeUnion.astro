---
import { getEntries } from 'astro:content';
import { type GlossaryEntry, type GlossaryRef } from '../scripts/glossary';
import Ref from './Ref.astro';
import Keyword from './syntax/Keyword.astro';
import ScopeInline from './ScopeInline.astro';
import Join from './Join.astro';

interface Props {
    list: GlossaryRef[];
    onPage?: true;
}

const { list, onPage } = Astro.props;
const types = await getEntries(list);
---

<Join list={types}>
    {(item: GlossaryEntry) => <Ref item={item} onPage={onPage}/>}

    <span slot="separator">
        {([_prevProps, prev]: [GlossaryEntry, any], [_nextProps, next]: [GlossaryEntry, any]) =>
            <>&nbsp;<Keyword tkn="type union" prev={prev} next={next}/>&nbsp;</>
        }
    </span>

    <span slot="outer">
        {(count: number, inner: any) => count > 1
            ? <ScopeInline delim="()">{inner}</ScopeInline>
            : inner
        }
    </span>
</Join>
