---
import { type GlossaryItem, findReference } from '../scripts/glossary';
import '../styles/tooltip.css';

interface Props {
    text: string;
    /** Leave undefined if text is same as key */
    key?: string;
}

const { text, key = text.toLowerCase() } = Astro.props;

/** Data about the item we are referencing */
const item: GlossaryItem = findReference(key);

/** Reference leads to the page we are already on */
const isHereRef = Astro.url.href.match(RegExp(`.*[/#]${item.href}$`));
---

<div class="tooltip">
    <a href={'/' + item.href} class={isHereRef && "here-ref"}>{text}</a>
    <span class="tooltiptext">
        {item.brief}
        <p>
            <strong>Aliases</strong>
            <ul>
                {item.aliases.map(alias =>{
                    const { noun, verb, adjective } = alias;
                    return <li>
                        {noun && <span><span class="part-of-speech noun">noun</span>&Tab;{noun.singular}</span>}
                        &Tab;
                        {verb && <span><span class="part-of-speech verb">verb</span>&Tab;{verb.infinitive}</span>}
                        &Tab;
                        {adjective && <span><span class="part-of-speech adjective">adjective</span>&Tab;{adjective.base}</span>}
                    </li>
                })}
            </ul>
        </p>
        <p>
        {isHereRef ? <>You are already here.</> : <>More information:<br/><a href={'/' + item.href}>{Astro.url.origin + '/' + item.href}</a></>}
        </p>
    </span>
</div>
